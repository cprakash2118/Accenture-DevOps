=======================================================================================
 - What is Ansible?
   Ansible is OpenSource (OSS) Automation Platform (Build in Python and PowerShell).
   Ansible can automate servers (Linux/UNIX/Windows) and Network Devices (Router & Switches).
   Ansible majorly used for below 5 points.
   1) Application Deployment (index.html or index.php or java_project.war)
   2) WorkFlow automation 
   3) Configuration Management
   4) Network Automation 
   5) Infrastructure Orchestration (Complete product life cycle deployment).
   
- Ansible setup 
  Install ansible on Linux/Unix system/server - This server considered as controle machine 
  Then you execute playbook or ad-hoc commands from controle machine.
  
  ansible (Used for to run the ad-hoc command)
  ansible-playbook (Used for to run the playbook)
  ansible-doc     ((Used for to refer ansible modules)
  
  It is important which "ansible.cfg" file used
  Inside "ansible.cfg" file you have define all environment.
  
  ansible --version (It provides all required details about ansible configuration).
  
  
  
Yum configuration base URL-  
https://mirror.centos.org/centos/8-stream/BaseOS
https://mirror.centos.org/centos/8-stream/AppStream
===========================================================================================
 - Setup Env - Ansible/Maven/Jenkins/Nexus/Git(GitHub)/SonarQube


CentoS8 - Faced some depedencies issues ans due to that it's taking time to install and setup the env.
Centos7 - using this image, we will create 3 VMs 

Note: Before create new VMs, we will shutdown the CentOS1/2/3. 


Create 3 virtual machine as per the resources.

Step 1)
file -> "New Virtual Machine" -> Continue with defaukt option "Typical - Recommended" --> Slect "Installer disk_image_file (ISO)
Click on "Next" and provide below details one by one.

Name: centos7-01,centos7-02,centos7-03 
user: lab 
passwd: lab 
NOte: root password also "lab".

Step 2)
Provide your virtual machine name as below one by one.
centos7-01 
centos7-02
centos7-03  
Note: Resource Alocation - 3GB RAM, 40GB disk, 1 CPU.

Specify the storage and click on "Next" 
Storage = 40G 

Step 3) 
Then click on "Customize hardware" then setup memory 3 GB
and finish.

Do the same for 02/03 with below infromation.
Name: centos7-01,centos7-02,centos7-03 
user: lab 
passwd: lab 
NOte: root password also "lab".



New Virtual machine (VMs) as per below.
centos7-01 
centos7-02 
centos7-03 

============================================
Phase 2nd 
ONce all virtual machines ready (installed), Login to those VMs one by one and setup the environment.

- Login to centos7-01 VM as "root" user and password for root acount is "lab".
- #ifconfig | grep inet | grep 192

hostname          IP address          Domain 
centos7-01   - 192.168.14.132/24     acc.com 
centos7-02   - 192.168.14.133/24     acc.com 
centos7-03   - 192.168.14.134/24     acc.com 

Note: Using "ifconfig" command, collected the above information.

 ###########################
Step 1) Setup the hostname and configure the required environment.
 
 # hostnamectl set-hostname centos7-01.acc.com 
  - To verify the hostname and Domain name.

 # hostname -s    (hostname)
 # hostname -d    (domain name)
 # hostname -f    (FQDN).
 
 # vim /etc/hosts
 192.168.14.132   centos7-01.acc.com  centos7-01
 192.168.14.133   centos7-02.acc.com  centos7-02
 192.168.14.134   centos7-03.acc.com  centos7-03
 
 :wq 
 Note: Save above entries 
 
 
  ###########################
 Step 2) COnfigure repo and install required packages (software).
 
 Perform below steps on control node (ANsile installed or installing)
 # yum install epel-release 
 # yum install ansible 
 
 
 To verify the installation 
 
 # ansible --version 
 Ansile 2.9 
 Python 2.7 


 Perform below steps on managed hosts (centos-7-02 & centos-7-03)
 # yum install epel-release 
 # yum repolist 
 
 
 Final network testing between all three nodes (centos-7-01/02/03)
 
 From your control node 
 # ping -c 2 centos-7-02 
 # ping -c 2 centos-7-03 
 
 
 ###########################
 Step 3) 

Need to do in all systems (control node + Managed hosts)
 User creation as per the case 
 1) devops-user-01 
 2) devops-user-02 
 3) devops-user-03

 # useradd   devops-user-01
 # echo "lab" | passwd --stdin devops-user-01
 # su - devops-user-01
 $ ssh-keygen -t rsa 
 Enter 
 Enter 
 Enter 
 
 Note: It will create keys (as we should be about to do key based authentication).
 
 $ pwd
 $ /home/devops-user-01
 $ ls -la 
 $ cd .ssh 
 $ ls
  id_rsa  id_rsa.pub

   NOte: "id_rsa" is your private key and "id_rsa.pub" is your public key.  
   
 $ ssh-copy-id centos-7-02.acc.com 
 password: 
 
 Note: One time it will ask for password.
 
  $ ssh-copy-id centos-7-03.acc.com 
 password: 
 
 NOw verify your access 
 $ ssh centos-7-02.acc.com 
 
  ###########################
 Step 4)
 ssh centos-7-02
 visudo 
  devops-user-01   ALL=(ALL)   ALL
  devops-user-02   ALL=(ALL)   NOPASSWD: ALL
  devops-user-03   ALL=(ALL)   ALL
  NOte: This we need to do on all the servers.
  
  
  
 Note: **** 
 Case 1st - (Username= devops-user-01) - Passwordless authentication and with password authorization. 
 Case 2nd - (Username= devops-user-02) - Passwordless authentication and passwordless authorization. 
 Case 3rd - (Username= devops-user-03) - With Password authentication and with password authorization.

==========================================
Verify the Ansible setup 

login to devops-user-02 
# su - devops-user-02 
$ ansible --version 

Ansible Version details 
Python Version Details 
Ansible Python module 
Ansible configuration details ("ansible.cfg" file).

 - Priorites of "ansible.cfg" file.
   
   1) ANSIBLE_CONFIG variable must be defined and carry the "ansible.cfg" file as well. 
   
   $ env | grep ANSIBLE_CONFIG                     (Checking if the ANSIBLE_CONFIG variable defined or not)
   $ export ANSIBLE_CONFIG=/var/tmp/ansible.cfg    (Defining the ANSIBLE_CONFIG file)
   $ touch /var/tmp/ansible.cfg                    (update/Create the file content as per your requirment).
   
   
   
   2) The file "ansible.cfg" must be on current working directory.
      Current working directory - Where you run/execute ansible* command 
	  
   3) The file ".ansible.cfg" must be on user's home directory.
       /home/devops-user-02/.ansible.cfg 

   4) The main configuration file.
      /etc/ansible/ansible.cfg 
	  

   - Inventory file 
    
	 When you consider file "ansible.cfg" then 1st option [defaults] inside your "ansible.cfg" file.
	 
	 $ whoami
	 cprakash
	 $ touch ansible.cfg 
	 $ vim ansible.cfg 
	  [defaults]
	  inventory = ./inventory 
	  remote_user = devops-user-01 
	  ask_pass = False 
	  
	  [privilege_escalation]
	   become = True 
	   become_user = root
	   become_method = sudo 
	   become_ask_pass = false 
	   
	   
	   Note: *** 
	   [defaults]     - Ansible Configuration customaization.
	   - inventory    - Describe the location and file name of the inventory file.
	   - remote_user  - User involved with execution on managed host.
	   - ask_pass     - If ask_pass true it mean it will alway ask password.
	   
	   [privilege_escalation]   - When you do privilege escalation to perform the opeartions on managed hosts.
	   become - It allow to switch from one user to another 
	   become_method - sudo 
	   become_root - root account 
	   become_ask_pass = sudo account if this option ture.
	   
	   
 ============= Inventory file 
   - Inventory file keeps the servers details, as given in example.
   
    [prod]
	server-01.example.com 
	server-02.example.com 
	server-03.example.com
    server-[04:10].example.com 	
	
	[Stag]
	server[11:15].example.com 
   
   
    [dev]
	server[21:25].example.com 
	
	[non-prod:childran]
	Stag 
	dev 
	
	[ip]
	172.168.[1:3].[21:23]
	
	
	
	prod, Stag, dev,non-prod,ip   - host group and "non-prod" is a parent of "Stage" and Dev".
	"non-prod" is also host group.
	
	==============================
	Ansible Ad-Hoc and Ansible Playbook execution. 
	
	$ ansible                       (Used for ansible ad-hoc command)
	$ ansible-playbook              (Used of ansible playbook execution)
	$ ansible-doc                   (used for to refer the module documentation used in playbook).
	
	
	Note:  Your "ansible.cfg" and "inventory" file must be ready.
	$ ansible <host_group> --list-hosts 
	NOte: It will list out all hosts present in inventory file.
	Example:-
	  ansible all --list-hosts
	  ansible web --list-hosts 
	  ansible db --list-hosts 
	  
	  
	  
	$ ansible web -m ping    (It will ping to all the web servers, "web" is your host_group).
	$ ansible db -m ping 
	
	$ ansible web -m yum -a "name=httpd state=present"
	$ ansible web -m user -a "name=john state=present"
	$ ansible web -m command -a "uptime"                   (For single command).
	$ ansible web -m shell -a "uptime ; df -THP ; date"    (For multiple command).
	
	$ ansible-doc yum 
	- Refer same as like manual page 
	- Use search ans "/EXAMPLE" enter - More examples you can refer.
	
	
	====================================
	Playbook Creation/Execution.

$ vim playbook_any_name.yaml
---
- name: Like a description about the play - 1st play 
  hosts: web 
 #hosts: web,db,lb,bs 
  tasks:
    - name: My 1st task 
	  yum:
	    name: httpd 
		state: present 
   
    - name: Start and enable service - This is my 2nd task.
	  service:
	    name: httpd
		state: started 
		enable: yes 
   
    - name: Deploy application. - This is 3rd task.
	  copy:
	    content: "This is my web server"
		dest: /var/www/html/index.html 
...
================================================================= Day 3 ============================================
Quick Recap - 
  Ansible
  Product Name: Red Hat Ansible Automation Platform (RHAAP)
  
  - Ansible installation ( Before to install ansible)
    1) INstalled OS - Centos7 
	2) Verified and setup IP and hostname (Local resolution - /etc/hosts) 
    3) Configure YUM repo for package installed (Might be required to installed some packages).
    4) INstalling Ansible on one of the VM (called Control node/plane)
	5) Rest all VMs only (1-3 steps) and these VMs or Servers called "Managed Host".
	6) File "ansible.cfg" - Main configuration file.
	7) Priority of "ansible configuration file - ansible.cfg".
	   a) ANSIBLE_CONFIG=/path/ansible.cfg 
	      eg: $ env | grep ANSIBLE_CONFIG    (No output)
		      $ export ANSIBLE_CONFIG=/var/ansible.cfg    (Defining)
		      $ env | grep ANSIBLE_CONFIG   (Verifying after defined).
	   b) Current Working Directory:-
	       eg: "ansible.cfg" file must be available on your current working dir.
	   c) ".ansible.cfg" file must be available in user's home dir.
	       eg: suppose you have logged in via "devops-user-02" then "/home/devops-user-02/.ansible.cfg" 
	   d) Main configuration file.
	       /etc/ansible/ansible.cfg 
		   
		 Note: Why "ansible.cfg" file used ?
		      - "ansible.cfg" file is the main configuration file for Ansible.
			  
			  
	    vim ansible.cfg 
		[defaults]
		 inventory = ./inventory 
		 remote_user = devops-user-02 
		 ask_pass  = False 
		 log_path = ./ansible.log
		 
		[privilege_escalation]
		become = True 
		become_user = root
		become_method = sudo 
		become_ask_pass = false 
		
			  
			  
	8) Inventory file - It will keep the record of your servers (all managed hosts).
        eg:
        vim inventory 
         [WebProd]
          phxbookpas[01:20].acc.com 

         [DBProd]
         phxbookpdb[01:04].acc.com 

         [CIServers]
         blrcipnode[01:04].acc.com 

         [prod:children]
          WebProd
		  DBProd
		   
	
        Note: "host group" will conatain managed host (servers)
		
	 9) Ansible commands used.
       $ ansible  --help 
       $ ansible-doc  --help 
       $ ansible-playbook --help 
	   
	 10 Ansible ad-hoc commands 
	    $ ansible host_group -m ping 
		eng 
		  ansible all -m ping 
       	   
	 11) Ansible playbook 
	    ---     (doc starter)
		- name: Describe my setup
          hosts: web 
          tasks: 		  
		or 
		- hosts: web  
          tasks: 
             		  
		
		
		
		
		...     (doc end)
===========================
- tasks 1st 

Groups name: unixadm (primary group of eric)
User name: eric 
Directory need to be created /opt/jenkins
owenr of the file/dir "/opt/jenkins" is eric and permission is 770

Question 1st
-task-1st 
 Create Group - module used - "group" (ansible-doc group)
 
-task-2nd 
 Create user - module used - "user"  (ansible-doc user)
 
-task-3rd 
 Create directory - module used - "file" (ansible-doc file)


- Question 2nd 

Apache deployment (index.html page with this message - " This is my webserver - FQDN" 
Firewalld 
Verify need to be done.

- Apache install   (package - httpd)
- Start and enabled apache service. (service -httpd)
- Firewall install  (package - firewalld)
- Start and enabled firewall service. (service -firewalld)
- Enable http port (module used - firewalld ( other infomration already given).
- Veify using uri
===========================================
vim playbook.yml 
---
- name: Display exam
  hosts: web 
  tasks:
    - name: Display my message 
	  debug:
	    msg: "This is my message - {{ inventory_hostname }}"
    
	- name: 2nd task   
	  shell: /usr/bin/systemctl status sshd 
	  register: output_var
	  
	- name: Display output of previous task.
	  debug:
	    var: output_var 
		
...

vim ansible.cfg 
[defaults]
 inventory = ./inventory 
 remote_user = devops-user-02 
 ask_pass  = False 
 log_path = ./ansible.log
 
[privilege_escalation]
become = True 
become_user = root
become_method = sudo 
become_ask_pass = false 

========
vim inventory 
[web]
centos-7-02.acc.com 

[db]
centos-7-03.acc.com 






	    
	   











	  
   
   
   




 
 

 
 
 























